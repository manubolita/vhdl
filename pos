library IEEE;
use IEEE.std_logic_1164.all;

entity prueba_pos is
    port (
        A3, A2, A1, A0 : in std_logic;
        S : out std_logic
    );
end entity;

architecture arq_prueba_pos of prueba_pos is
    signal M0, M2, M3, M4, M6, M8, M10, M11, M12, M13, M14, M15 : std_logic;
begin
    M0  <= (A3 OR A2 OR A1 OR A0);
    M2  <= (A3 OR A2 OR (NOT A1) OR A0);
    M3  <= (A3 OR A2 OR (NOT A1) OR (NOT A0));
    M4  <= (A3 OR (NOT A2) OR A1 OR A0);
    M6  <= (A3 OR (NOT A2) OR (NOT A1) OR A0);
    M8  <= ((NOT A3) OR A2 OR A1 OR A0);

    
    M10 <= ((NOT A3) OR A2 OR (NOT A1) OR A0);     
    M11 <= ((NOT A3) OR A2 OR (NOT A1) OR (NOT A0)); 

    M12 <= ((NOT A3) OR (NOT A2) OR A1 OR A0);
    M13 <= ((NOT A3) OR (NOT A2) OR A1 OR (NOT A0));
    M14 <= ((NOT A3) OR (NOT A2) OR (NOT A1) OR A0);
    M15 <= ((NOT A3) OR (NOT A2) OR (NOT A1) OR (NOT A0));

    S <= M0 AND M2 AND M3 AND M4 AND M6 AND M8 AND M10 AND M11 AND M12 AND M13 AND M14 AND M15;
end architecture;




library IEEE;
use IEEE.std_logic_1164.all;

entity tb_prueba_pos is
end entity;

architecture arq_tb_prueba_pos of tb_prueba_pos is
    component prueba_pos is
        port (
            A3, A2, A1, A0 : in std_logic;
            S : out std_logic
        );
    end component;

    signal P, L, M, N, S : std_logic;
begin
    uut : prueba_pos
        port map (
            A3 => P,
            A2 => L,
            A1 => M,
            A0 => N,
            S  => S
        );

    process
    begin
        P <= '0'; L <= '0'; M <= '0'; N <= '0'; wait for 10 ns;
        P <= '0'; L <= '0'; M <= '0'; N <= '1'; wait for 10 ns;
        P <= '0'; L <= '0'; M <= '1'; N <= '0'; wait for 10 ns;
        P <= '0'; L <= '0'; M <= '1'; N <= '1'; wait for 10 ns;
        P <= '0'; L <= '1'; M <= '0'; N <= '0'; wait for 10 ns;
        P <= '0'; L <= '1'; M <= '0'; N <= '1'; wait for 10 ns;
        P <= '0'; L <= '1'; M <= '1'; N <= '0'; wait for 10 ns;
        P <= '0'; L <= '1'; M <= '1'; N <= '1'; wait for 10 ns;
        P <= '1'; L <= '0'; M <= '0'; N <= '0'; wait for 10 ns;
        P <= '1'; L <= '0'; M <= '0'; N <= '1'; wait for 10 ns;
        P <= '1'; L <= '0'; M <= '1'; N <= '0'; wait for 10 ns;
        P <= '1'; L <= '0'; M <= '1'; N <= '1'; wait for 10 ns;
        P <= '1'; L <= '1'; M <= '0'; N <= '0'; wait for 10 ns;
        P <= '1'; L <= '1'; M <= '0'; N <= '1'; wait for 10 ns;
        P <= '1'; L <= '1'; M <= '1'; N <= '0'; wait for 10 ns;
        P <= '1'; L <= '1'; M <= '1'; N <= '1'; wait for 10 ns;
        wait; -- mantiene la simulaciÃ³n parada al final
    end process;
end architecture;
